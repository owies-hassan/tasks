{"version":3,"sources":["components/InputField.tsx","components/SingleTodo.tsx","components/TodoList.tsx","App.tsx","index.tsx"],"names":["InputField","todo","setTodo","handleAdd","inputRef","useRef","className","onSubmit","e","current","blur","type","placeholder","value","ref","onChange","target","SingleTodo","index","todos","setTodos","useState","edit","setEdit","editTodo","setEditTodo","useEffect","focus","draggableId","id","toString","provided","snapshot","preventDefault","map","handleEdit","draggableProps","dragHandleProps","innerRef","isDragging","isDone","onClick","filter","TodoList","CompletedTodos","setCompletedTodos","droppableId","isDraggingOver","droppableProps","App","onDragEnd","result","destination","source","console","log","add","active","complete","splice","Date","now","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44c6518a.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\r\nimport \"./styles.css\";\r\n\r\ninterface props {\r\n  todo: string;\r\n  setTodo: React.Dispatch<React.SetStateAction<string>>;\r\n  handleAdd: (e: React.FormEvent) => void;\r\n}\r\n\r\nconst InputField: React.FC<props> = ({ todo, setTodo, handleAdd }) => {\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  return (\r\n    <form\r\n      className=\"input\"\r\n      onSubmit={(e) => {\r\n        handleAdd(e);\r\n        inputRef.current?.blur();\r\n      }}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter a Task\"\r\n        value={todo}\r\n        ref={inputRef}\r\n        onChange={(e) => setTodo(e.target.value)}\r\n        className=\"input__box\"\r\n      />\r\n      <button type=\"submit\" className=\"input_submit\">\r\n        GO\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default InputField;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { AiFillEdit, AiFillDelete } from \"react-icons/ai\";\r\nimport { MdDone } from \"react-icons/md\";\r\nimport { Todo } from \"../models/models\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nconst SingleTodo: React.FC<{\r\n  index: number;\r\n  todo: Todo;\r\n  todos: Array<Todo>;\r\n  setTodos: React.Dispatch<React.SetStateAction<Array<Todo>>>;\r\n}> = ({ index, todo, todos, setTodos }) => {\r\n  const [edit, setEdit] = useState<boolean>(false);\r\n  const [editTodo, setEditTodo] = useState<string>(todo.todo);\r\n\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  useEffect(() => {\r\n    inputRef.current?.focus();\r\n  }, [edit]);\r\n\r\n  const handleEdit = (e: React.FormEvent, id: number) => {\r\n    e.preventDefault();\r\n    setTodos(\r\n      todos.map((todo) => (todo.id === id ? { ...todo, todo: editTodo } : todo))\r\n    );\r\n    setEdit(false);\r\n  };\r\n\r\n  const handleDelete = (id: number) => {\r\n    setTodos(todos.filter((todo) => todo.id !== id));\r\n  };\r\n\r\n  const handleDone = (id: number) => {\r\n    setTodos(\r\n      todos.map((todo) =>\r\n        todo.id === id ? { ...todo, isDone: !todo.isDone } : todo\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Draggable draggableId={todo.id.toString()} index={index}>\r\n      {(provided, snapshot) => (\r\n        <form\r\n          onSubmit={(e) => handleEdit(e, todo.id)}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          ref={provided.innerRef}\r\n          className={`todos__single ${snapshot.isDragging ? \"drag\" : \"\"}`}\r\n        >\r\n          {edit ? (\r\n            <input\r\n              value={editTodo}\r\n              onChange={(e) => setEditTodo(e.target.value)}\r\n              className=\"todos__single--text\"\r\n              ref={inputRef}\r\n            />\r\n          ) : todo.isDone ? (\r\n            <s className=\"todos__single--text\">{todo.todo}</s>\r\n          ) : (\r\n            <span className=\"todos__single--text\">{todo.todo}</span>\r\n          )}\r\n          <div>\r\n            <span\r\n              className=\"icon\"\r\n              onClick={() => {\r\n                if (!edit && !todo.isDone) {\r\n                  setEdit(!edit);\r\n                }\r\n              }}\r\n            >\r\n              <AiFillEdit />\r\n            </span>\r\n            <span className=\"icon\" onClick={() => handleDelete(todo.id)}>\r\n              <AiFillDelete />\r\n            </span>\r\n            <span className=\"icon\" onClick={() => handleDone(todo.id)}>\r\n              <MdDone />\r\n            </span>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default SingleTodo;\r\n","import React from \"react\";\r\nimport { Todo } from \"../models/models\";\r\nimport SingleTodo from \"./SingleTodo\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\n\r\ninterface props {\r\n  todos: Array<Todo>;\r\n  setTodos: React.Dispatch<React.SetStateAction<Array<Todo>>>;\r\n  setCompletedTodos: React.Dispatch<React.SetStateAction<Array<Todo>>>;\r\n  CompletedTodos: Array<Todo>;\r\n}\r\n\r\nconst TodoList: React.FC<props> = ({\r\n  todos,\r\n  setTodos,\r\n  CompletedTodos,\r\n  setCompletedTodos,\r\n}) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <Droppable droppableId=\"TodosList\">\r\n        {(provided, snapshot) => (\r\n          <div\r\n            className={`todos ${snapshot.isDraggingOver ? \"dragactive\" : \"\"}`}\r\n            ref={provided.innerRef}\r\n            {...provided.droppableProps}\r\n          >\r\n            <span className=\"todos__heading\">Active Tasks</span>\r\n            {todos?.map((todo, index) => (\r\n              <SingleTodo\r\n                index={index}\r\n                todos={todos}\r\n                todo={todo}\r\n                key={todo.id}\r\n                setTodos={setTodos}\r\n              />\r\n            ))}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n      <Droppable droppableId=\"TodosRemove\">\r\n        {(provided, snapshot) => (\r\n          <div\r\n            ref={provided.innerRef}\r\n            {...provided.droppableProps}\r\n            className={`todos  ${\r\n              snapshot.isDraggingOver ? \"dragcomplete\" : \"remove\"\r\n            }`}\r\n          >\r\n            <span className=\"todos__heading\">Completed Tasks</span>\r\n            {CompletedTodos?.map((todo, index) => (\r\n              <SingleTodo\r\n                index={index}\r\n                todos={CompletedTodos}\r\n                todo={todo}\r\n                key={todo.id}\r\n                setTodos={setCompletedTodos}\r\n              />\r\n            ))}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport InputField from \"./components/InputField\";\r\nimport TodoList from \"./components/TodoList\";\r\nimport { DragDropContext, DropResult } from \"react-beautiful-dnd\";\r\nimport { Todo } from \"./models/models\";\r\n\r\nconst App: React.FC = () => {\r\n  const [todo, setTodo] = useState<string>(\"\");\r\n  const [todos, setTodos] = useState<Array<Todo>>([]);\r\n  const [CompletedTodos, setCompletedTodos] = useState<Array<Todo>>([]);\r\n\r\n  const handleAdd = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (todo) {\r\n      setTodos([...todos, { id: Date.now(), todo, isDone: false }]);\r\n      setTodo(\"\");\r\n    }\r\n  };\r\n\r\n  const onDragEnd = (result: DropResult) => {\r\n    const { destination, source } = result;\r\n\r\n    console.log(result);\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      destination.droppableId === source.droppableId &&\r\n      destination.index === source.index\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    let add;\r\n    let active = todos;\r\n    let complete = CompletedTodos;\r\n    // Source Logic\r\n    if (source.droppableId === \"TodosList\") {\r\n      add = active[source.index];\r\n      active.splice(source.index, 1);\r\n    } else {\r\n      add = complete[source.index];\r\n      complete.splice(source.index, 1);\r\n    }\r\n\r\n    // Destination Logic\r\n    if (destination.droppableId === \"TodosList\") {\r\n      active.splice(destination.index, 0, add);\r\n    } else {\r\n      complete.splice(destination.index, 0, add);\r\n    }\r\n\r\n    setCompletedTodos(complete);\r\n    setTodos(active);\r\n  };\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <div className=\"App\">\r\n        <span className=\"heading\">Taskify</span>\r\n        <InputField todo={todo} setTodo={setTodo} handleAdd={handleAdd} />\r\n        <TodoList\r\n          todos={todos}\r\n          setTodos={setTodos}\r\n          CompletedTodos={CompletedTodos}\r\n          setCompletedTodos={setCompletedTodos}\r\n        />\r\n      </div>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}